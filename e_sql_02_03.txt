
テキスト：達人に学ぶSQL徹底指南書 ～初級者で終わりたくないあなたへ～
日付： 2月21日
作成者：玉利

問題番号：演習問題2-③ランキングの更新
内容：
もう一つランキングを題材にした練習をしておきましょう。次のように、順位列が最初からテーブルに用意されているとします。
+----------+--------+-------+---------+
| district | name   | price | ranking |
+----------+--------+-------+---------+
| 関西     | りんご |    20 |    NULL |
| 関西     | スイカ |    30 |    NULL |
| 関西     | レモン |    70 |    NULL |
| 関東     | ぶどう |    70 |    NULL |
| 関東     | りんご |   100 |    NULL |
| 関東     | パイン |   100 |    NULL |
| 関東     | レモン |   100 |    NULL |
| 東北     | ぶどう |    50 |    NULL |
| 東北     | みかん |   100 |    NULL |
| 東北     | りんご |    50 |    NULL |
| 東北     | レモン |    30 |    NULL |
+----------+--------+-------+---------+
ただし、順位の初期値はオールNULLです。皆さんにやってほしいのは、この列に順位を入れることです。この場合、自己結合を使うのには何の問題もないのですが、OLAP関数を使おうとすると、ちょっとクリアすべき壁に突き当たります。

---回答---
実行文

 UPDATE districtProducts2 AS DistA,         -- NULL値を更新したいので更新したいdistrictProducts2をDistAとして指定する
     (SELECT                                -- ランキングを取得したいのでランキングを取得する命令文を作成する
         district,                          -- 後々の結合のための主キーの内の一つを取得する
         name,                              -- 後々の結合のための主キーの内の二つ目を取得する
         (SELECT                            -- ランキングの順位を求める命令文を作成する
            COUNT(P2.price)+1               -- WHERE句に当てはまる条件の個数に1を足したものが順位なので取得する
          FROM                              -- 順位を求めるテーブルを指定する
            districtproducts2 P2            -- 順位を求められるテーブルのdistrictproducts2を指定する
          WHERE                             -- 順位を求めるための条件を指定する
            P2.district = P1.district       -- 地域ごとのランキングが欲しいので地域が同一のものを選択する
          AND                               -- 上記条件のみでは順位を取得できないので条件を追加する
            P2.price > P1.price             -- P2の価格がP1のテーブルの価格より大きいときはP1の順位を下げるためにカウントする
          ) AS ranking                      -- 命令文から得られた列を総じてrankingとして取り出す
       FROM                                 -- 値を比較するための値を所持しているテーブルを取得する
         districtproducts2 P1 ) DistB       -- DistAのランキングを更新するためのサブクエリをDistBとして指定する
 SET                                        -- rankingの値を更新したいのでSETで指定する
   DistA.ranking = DistB.ranking            -- NULL値が入っているDistAのRankingの値を順位を求めたDistBのRankingの値で更新する
 WHERE                                      -- どの値に紐づいて更新を行うのかキーを指定する
   DistA.district = DistB.district          -- 主キーの一つである地域を更新のキーとして指定する
 AND                                        -- 主キーは二つあるのでもう一つ条件を追加する
   DistA.name = DistB.name                  -- もう一つの主キーである名前を更新のキーとして指定する
 ;                                          -- 命令文を終了させる

実行結果

+----------+--------+-------+---------+
| district | name   | price | ranking |
+----------+--------+-------+---------+
| 関西     | りんご |    20 |       3 |
| 関西     | スイカ |    30 |       2 |
| 関西     | レモン |    70 |       1 |
| 関東     | ぶどう |    70 |       4 |
| 関東     | りんご |   100 |       1 |
| 関東     | パイン |   100 |       1 |
| 関東     | レモン |   100 |       1 |
| 東北     | ぶどう |    50 |       2 |
| 東北     | みかん |   100 |       1 |
| 東北     | りんご |    50 |       2 |
| 東北     | レモン |    30 |       4 |
+----------+--------+-------+---------+

