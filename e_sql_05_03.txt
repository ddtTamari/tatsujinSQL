
テキスト：達人に学ぶSQL徹底指南書 ～初級者で終わりたくないあなたへ～
日付：3月9日
作成者：玉利

問題番号：演習問題5-③完全外部結合とMERGE文
内容：

＊ MERGE文はOracleで使われるものなので、MySQLで同等の働きをするINSERT ... ON DUPLICATE KEY UPDATEを使用しました。

「完全外部結合」のところで、「完全外部結合は情報を欠落させないという点でMERGE文によく似ている」と述べました。ここでは、そのMERGE文につて練習しておきましょう。
MERGE文はSQL：2003で標準化された非常に新しい機能ですが、二つのテーブルの情報を一箇所にまとめることができるため、入力元のデータソースが複数に分散していて、それを一つのテーブルにまとめたい場合などに大きな威力を発揮します。
ここでは、本文でも使ったClass_A、Class_Bのテーブルを再び使いましょう。(Bクラスのデータを少し変えています)。
いま、Class_BのデータをClass_Aへマージすることにします。すると、求める結果は次のようになります。

識別子(id)列をキーにClass_Aテーブルを検索して、行があればUPDATE、なければINSERTという動作を行います。その結果、たまたま名前が一致した1番の「田中」と、Class_Bに存在しなかった3番の「伊集院」については変更なし、キーは一致するけど名前が値が違う2番の「鈴木」は「内海」に更新され、Class_Aに存在しなかった新顔の西園寺が追加されるわけです。


---回答---
実行文
INSERT INTO Class_A(id,name)                             -- Class_Aにないデータのidとnameを追加する
    SELECT  id , name                                    -- 挿入するデータを取得するためにClass_Bからidとnameを追加する
    FROM   (SELECT id ,name FROM Class_B) Class_B        -- 後々呼び出しやすいようidとnameを取り出すサブクエリをClass_Bと命名
 ON DUPLICATE KEY UPDATE                                 -- 以下idが既存だった場合に更新する値
    name = Class_B.name                                  -- 名前をClass_Bの名前で更新
;                                                        -- 命令文を終了させる
実行結果
元Class_A：
+----+--------+
| id | name   |
+----+--------+
| 1  | 田中   |
| 2  | 鈴木   |
| 3  | 伊集院 |
+----+--------+
元Class_B：
+----+--------+
| id | name   |
+----+--------+
| 1  | 田中   |
| 2  | 内海   |
| 4  | 西園寺 |
+----+--------+
マージ結果：
+----+--------+
| id | name   |
+----+--------+
| 1  | 田中   |
| 2  | 内海   |
| 3  | 伊集院 |
| 4  | 西園寺 |
+----+--------+
